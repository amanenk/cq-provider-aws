// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cloudquery/cq-provider-aws/client (interfaces: IdentityStoreClient)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	identitystore "github.com/aws/aws-sdk-go-v2/service/identitystore"
	gomock "github.com/golang/mock/gomock"
)

// MockIdentityStoreClient is a mock of IdentityStoreClient interface.
type MockIdentityStoreClient struct {
	ctrl     *gomock.Controller
	recorder *MockIdentityStoreClientMockRecorder
}

// MockIdentityStoreClientMockRecorder is the mock recorder for MockIdentityStoreClient.
type MockIdentityStoreClientMockRecorder struct {
	mock *MockIdentityStoreClient
}

// NewMockIdentityStoreClient creates a new mock instance.
func NewMockIdentityStoreClient(ctrl *gomock.Controller) *MockIdentityStoreClient {
	mock := &MockIdentityStoreClient{ctrl: ctrl}
	mock.recorder = &MockIdentityStoreClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIdentityStoreClient) EXPECT() *MockIdentityStoreClientMockRecorder {
	return m.recorder
}

// ListGroups mocks base method.
func (m *MockIdentityStoreClient) ListGroups(arg0 context.Context, arg1 *identitystore.ListGroupsInput, arg2 ...func(*identitystore.Options)) (*identitystore.ListGroupsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListGroups", varargs...)
	ret0, _ := ret[0].(*identitystore.ListGroupsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListGroups indicates an expected call of ListGroups.
func (mr *MockIdentityStoreClientMockRecorder) ListGroups(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListGroups", reflect.TypeOf((*MockIdentityStoreClient)(nil).ListGroups), varargs...)
}

// ListUsers mocks base method.
func (m *MockIdentityStoreClient) ListUsers(arg0 context.Context, arg1 *identitystore.ListUsersInput, arg2 ...func(*identitystore.Options)) (*identitystore.ListUsersOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListUsers", varargs...)
	ret0, _ := ret[0].(*identitystore.ListUsersOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListUsers indicates an expected call of ListUsers.
func (mr *MockIdentityStoreClientMockRecorder) ListUsers(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListUsers", reflect.TypeOf((*MockIdentityStoreClient)(nil).ListUsers), varargs...)
}
